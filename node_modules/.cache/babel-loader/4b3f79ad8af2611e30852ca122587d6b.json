{"ast":null,"code":"const STRANGER_THINGS_API_URL = \"https://strangers-things.herokuapp.com/api/2204-UNF-HY-WEB-PT/posts\";\nexport const apiCall = async function (url) {\n  let method = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"GET\";\n  let token = arguments.length > 2 ? arguments[2] : undefined;\n  let body = arguments.length > 3 ? arguments[3] : undefined;\n  let data = false;\n\n  try {\n    const response = await fetch(STRANGER_THINGS_API_URL + url, setToken(getFetchOptions(method, body), token));\n    data = await response.json();\n\n    if (data.error) {\n      throw data.error;\n    }\n  } catch (e) {\n    console.error(e);\n  }\n\n  return data;\n};\n\nconst getFetchOptions = (method, body) => {\n  return {\n    method: method.toUpperCase(),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(body)\n  };\n};\n\nconst setToken = (body, token) => {\n  return token ? Object.assign(body, {\n    headers: Object.assign(body.headers, {\n      Authorization: `Bearer ${token}`\n    })\n  }) : body;\n}; //helper functions for api use\n\n\nexport const fetchPosts = async token => {\n  const data = await apiCall('/posts', 'GET', token);\n\n  if (!data || !data.data) {\n    return [];\n  }\n\n  return data.data.posts || [];\n};\nexport const fetchPost = async (token, postId) => {};\nexport const loginUser = async (username, password) => {\n  const login = await apiCall(\"/users/login\", \"POST\", null, {\n    guest: {\n      username,\n      password\n    }\n  });\n  return {\n    user: login.data.guest,\n    token: login.data.token\n  };\n};\nexport const registerUser = async (username, password) => {\n  const registration = await apiCall(\"/guests/register\", \"POST\", null, {\n    guest: {\n      username,\n      password\n    }\n  });\n  return {\n    user: registration.data.guest,\n    token: registration.data.token\n  };\n};\nexport const submitComment = async (token, content, postId) => {\n  const data = await apiCall(`/posts/${postId}/comments`, 'POST', token, {\n    comment: {\n      content\n    },\n    guest: {\n      token\n    }\n  });\n  console.log('comment?', data);\n  return data;\n};\nexport const submitPost = async (token, location, description) => {\n  const data = await apiCall(`/posts`, 'POST', token, {\n    post: {\n      description,\n      location\n    }\n  }); // Response from the API is incomplete, so let's grab the full vacation object\n\n  const newVacations = await fetchVacations(token);\n  return newVacations;\n};\nexport const deletePost = async (token, postId) => {\n  const data = await apiCall(`/posts/${postId}`, 'DELETE', token);\n  return data.success;\n};","map":{"version":3,"names":["STRANGER_THINGS_API_URL","apiCall","url","method","token","body","data","response","fetch","setToken","getFetchOptions","json","error","e","console","toUpperCase","headers","JSON","stringify","Object","assign","Authorization","fetchPosts","posts","fetchPost","postId","loginUser","username","password","login","guest","user","registerUser","registration","submitComment","content","comment","log","submitPost","location","description","post","newVacations","fetchVacations","deletePost","success"],"sources":["D:/vscode project/Course Work/strangers-things/src/api/utility.js"],"sourcesContent":["const STRANGER_THINGS_API_URL =\r\n    \"https://strangers-things.herokuapp.com/api/2204-UNF-HY-WEB-PT/posts\";\r\n\r\nexport const apiCall = async (url, method = \"GET\", token, body) => {\r\n    let data = false;\r\n    try {\r\n        const response = await fetch(\r\n            STRANGER_THINGS_API_URL + url,\r\n            setToken(getFetchOptions(method, body), token)\r\n        );\r\n        data = await response.json();\r\n\r\n        if (data.error) {\r\n            throw data.error;\r\n        }\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n\r\n    return data;\r\n};\r\n\r\nconst getFetchOptions = (method, body) => {\r\n    return {\r\n        method: method.toUpperCase(),\r\n        headers: {\r\n            \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify(body),\r\n    };\r\n};\r\n\r\nconst setToken = (body, token) => {\r\n    return token\r\n        ? Object.assign(body, {\r\n            headers: Object.assign(body.headers, {\r\n                Authorization: `Bearer ${token}`,\r\n            }),\r\n        })\r\n        : body;\r\n};\r\n\r\n\r\n//helper functions for api use\r\n\r\nexport const fetchPosts = async (token) => {\r\n    const data = await apiCall('/posts', 'GET', token)\r\n    if (!data || !data.data) {\r\n      return []\r\n    }\r\n  \r\n    return data.data.posts || [];\r\n  }\r\n  \r\n  export const fetchPost = async(token, postId) => {\r\n  \r\n  }\r\n  \r\n  export const loginUser = async(username, password) => {\r\n    const login = await apiCall(\"/users/login\", \"POST\", null, {\r\n      guest: {username, password}\r\n    })\r\n  \r\n    return {\r\n      user: login.data.guest, \r\n      token: login.data.token\r\n    };\r\n  }\r\n  \r\n  export const registerUser = async(username, password) => {\r\n    const registration = await apiCall(\"/guests/register\", \"POST\", null, {\r\n      guest: {username, password}\r\n    })\r\n  \r\n    return {\r\n      user: registration.data.guest, \r\n      token: registration.data.token\r\n    };\r\n  }\r\n  \r\n  export const submitComment = async(token, content, postId) => {\r\n    const data = await apiCall(\r\n      `/posts/${postId}/comments`, \r\n      'POST', \r\n      token, \r\n      {comment: {content}, guest: {token}}\r\n    )\r\n  \r\n    console.log('comment?', data);\r\n  \r\n    return data;\r\n  }\r\n  \r\n  export const submitPost = async(token, location, description) => {\r\n    const data = await apiCall(\r\n      `/posts`, \r\n      'POST', \r\n      token, \r\n      { post: {description, location} }\r\n    )\r\n  \r\n    // Response from the API is incomplete, so let's grab the full vacation object\r\n    const newVacations = await fetchVacations(token)\r\n    return newVacations;\r\n  }\r\n  \r\n  \r\n  \r\n  export const deletePost = async(token, postId) => {\r\n    const data = await apiCall(\r\n      `/posts/${postId}`,\r\n      'DELETE',\r\n      token\r\n    );\r\n  \r\n    return data.success;\r\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module"}
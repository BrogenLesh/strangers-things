{"ast":null,"code":"var _jsxFileName = \"/home/leshb/Course Work/strangers-things/src/components/Posts.js\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect, useState } from \"react\";\n// import {useHistory } from \"react-router-dom\";\n// import { fetchPosts} from \"../util/api\";\n// // Filter posts with a simple text matcher (no fetch call needed here)\n// // handles for the different submits and deletes. post submit and delete post\n// const Posts = ({\n//     user,\n//     token,\n//     posts,\n//     setPosts,\n//     setFeaturedPost,\n// }) => {\n//     const [search, setSearch] = useState(\"\");\n//     const [description, setDescription] = useState(\"\");\n//     const [location, setLocation] = useState(\"\");\n//     const [price, setPrice] = useState(\"\");\n//     const [title, setTitle] = useState(\"\");\n//     const history = useHistory();\n//     useEffect(() => (async () => setPosts(await fetchPosts(token)))(), []);\n//     const searchMatches = (post) => {\n//         return `${post.location} ${post.description} ${post.title} ${post.price}`\n//             .toLowerCase()\n//             .includes(search.toLowerCase());\n//     };\n//     return (\n//         <>\n//             <h1>Posts</h1>\n//             <input\n//                 onChange={(e) => setSearch(e.target.value)}\n//                 type=\"text\"\n//                 name=\"search\"\n//                 placeholder=\"search\"\n//             />\n//             <section>\n//                 {posts\n//                     .filter((post) => {\n//                         return searchMatches(post);\n//                     })\n//                     .map((post) => {\n//                         return (\n//                             <div\n//                                 key={post.id}\n//                                 onClick={(e) => {\n//                                     handlePostClick(e, post);\n//                                 }}\n//                             >\n//                                 <h3>{post.title}</h3>\n//                                 <p>{post.location}</p>\n//                                 <p>{post.description}</p>\n//                                 <p>{post.price}</p>\n//                             </div>\n//                         );\n//                     })}\n//             </section>\n//         </>\n//     );\n// };\n// export default Posts;\nimport { React, useEffect, useState } from \"react\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { fetchAllPost } from \"../utility/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Posts = props => {\n  _s();\n\n  const {\n    posts,\n    setPosts,\n    postID,\n    setPostID,\n    token,\n    featuredPost,\n    setFeaturedPost,\n    search,\n    setSearch\n  } = props;\n  const history = useHistory();\n\n  const post = async () => {\n    setPosts(await fetchAllPost(token));\n  };\n\n  useEffect(() => {\n    post();\n  }, []);\n\n  const handleSearch = event => {\n    setSearch(event.target.value);\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n  };\n\n  const handleClick = () => {\n    token ? history.push('/createform') : alert(\"Please Login\");\n  };\n\n  const handleFeaturedPost = (event, post) => {\n    // grab that post and display on screen\n    if (token) {\n      setFeaturedPost(post);\n      setPostID(post._id);\n      history.push(`/posts/${post._id}`);\n    } else {\n      alert(\"please Login\");\n    } // change the URL path to ${APIURL}/post/postID\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"postNav\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"search\",\n        placeholder: \"Search Post\",\n        value: search,\n        onChange: handleSearch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        style: {\n          fontSize: \"15px\"\n        },\n        onClick: handleClick,\n        children: \"Create a Post +\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), posts.filter(post => {\n      return `${post.title} ${post.description}` //After creating a post, I can't see my Posts because of a TypeError \"Cannot read properties of undefined (reading \"title\") Post.js line 49:1\n      .toLowerCase().includes(search.toLowerCase());\n    }).map(post => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"post-card\",\n          onClick: event => {\n            {\n              handleFeaturedPost(event, post);\n            }\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"card-hover\",\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Price:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 37\n            }, this), \" \", post.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Seller:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 37\n            }, this), \" \", post.author.username]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Location:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 37\n            }, this), \" \", post.location]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }, this)\n      }, void 0, false);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Posts, \"bz2N+u0mX89LO9zOCfVCA9Sa20M=\", false, function () {\n  return [useHistory];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useEffect","useState","Link","useHistory","fetchAllPost","Posts","props","posts","setPosts","postID","setPostID","token","featuredPost","setFeaturedPost","search","setSearch","history","post","handleSearch","event","target","value","handleSubmit","preventDefault","handleClick","push","alert","handleFeaturedPost","_id","fontSize","filter","title","description","toLowerCase","includes","map","price","author","username","location"],"sources":["/home/leshb/Course Work/strangers-things/src/components/Posts.js"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import {useHistory } from \"react-router-dom\";\r\n// import { fetchPosts} from \"../util/api\";\r\n\r\n\r\n// // Filter posts with a simple text matcher (no fetch call needed here)\r\n// // handles for the different submits and deletes. post submit and delete post\r\n\r\n// const Posts = ({\r\n//     user,\r\n//     token,\r\n//     posts,\r\n//     setPosts,\r\n//     setFeaturedPost,\r\n// }) => {\r\n//     const [search, setSearch] = useState(\"\");\r\n//     const [description, setDescription] = useState(\"\");\r\n//     const [location, setLocation] = useState(\"\");\r\n//     const [price, setPrice] = useState(\"\");\r\n//     const [title, setTitle] = useState(\"\");\r\n\r\n//     const history = useHistory();\r\n\r\n//     useEffect(() => (async () => setPosts(await fetchPosts(token)))(), []);\r\n\r\n//     const searchMatches = (post) => {\r\n//         return `${post.location} ${post.description} ${post.title} ${post.price}`\r\n//             .toLowerCase()\r\n//             .includes(search.toLowerCase());\r\n//     };\r\n\r\n//     return (\r\n//         <>\r\n//             <h1>Posts</h1>\r\n//             <input\r\n//                 onChange={(e) => setSearch(e.target.value)}\r\n//                 type=\"text\"\r\n//                 name=\"search\"\r\n//                 placeholder=\"search\"\r\n//             />\r\n\r\n//             <section>\r\n//                 {posts\r\n//                     .filter((post) => {\r\n//                         return searchMatches(post);\r\n//                     })\r\n//                     .map((post) => {\r\n//                         return (\r\n//                             <div\r\n//                                 key={post.id}\r\n//                                 onClick={(e) => {\r\n//                                     handlePostClick(e, post);\r\n//                                 }}\r\n//                             >\r\n//                                 <h3>{post.title}</h3>\r\n//                                 <p>{post.location}</p>\r\n//                                 <p>{post.description}</p>\r\n//                                 <p>{post.price}</p>\r\n//                             </div>\r\n//                         );\r\n//                     })}\r\n//             </section>\r\n//         </>\r\n//     );\r\n// };\r\n\r\n// export default Posts;\r\n\r\nimport { React, useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { fetchAllPost } from \"../utility/api\";\r\n\r\nconst Posts = (props) => {\r\n    const {\r\n        posts, setPosts,\r\n        postID, setPostID, token,\r\n        featuredPost, setFeaturedPost, search, setSearch } = props\r\n\r\n    const history = useHistory();\r\n\r\n    const post = async () => {\r\n        setPosts(await fetchAllPost(token))\r\n    }\r\n\r\n    useEffect(() => {\r\n        post();\r\n    }, []);\r\n\r\n\r\n    const handleSearch = (event) => {\r\n        setSearch(event.target.value)\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    const handleClick = () => {\r\n        token ? history.push('/createform') :\r\n            alert(\"Please Login\")\r\n    }\r\n\r\n    const handleFeaturedPost = (event, post) => {\r\n        // grab that post and display on screen\r\n        if (token) {\r\n            setFeaturedPost(post);\r\n            setPostID(post._id)\r\n            history.push(`/posts/${post._id}`)\r\n        } else {\r\n            alert(\"please Login\")\r\n        }\r\n\r\n        // change the URL path to ${APIURL}/post/postID\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form id=\"postNav\" onSubmit={handleSubmit}>\r\n                <input type=\"text\" name=\"search\" placeholder=\"Search Post\" value={search} onChange={handleSearch}></input>\r\n                <button style={{ fontSize: \"15px\" }} onClick={handleClick}>Create a Post +</button>\r\n            </form>\r\n\r\n            {\r\n                posts.filter(post => {\r\n\r\n                    return `${post.title} ${post.description}`\r\n                        //After creating a post, I can't see my Posts because of a TypeError \"Cannot read properties of undefined (reading \"title\") Post.js line 49:1\r\n                        .toLowerCase()\r\n                        .includes(search.toLowerCase())\r\n                }).map((post) => {\r\n                    return (\r\n                        <>\r\n                            <div id=\"post-card\" onClick={(event) => {\r\n                                { handleFeaturedPost(event, post) }\r\n                            }}>\r\n                                <h1 className=\"card-hover\">{post.title}</h1>\r\n                                <p>{post.description}</p>\r\n                                <div>\r\n                                    <b>Price:</b> {post.price}\r\n                                </div>\r\n                                <div>\r\n                                    <b>Seller:</b> {post.author.username}\r\n                                </div>\r\n                                <div>\r\n                                    <b>Location:</b> {post.location}\r\n                                </div>\r\n                            </div>\r\n                        </>\r\n                    );\r\n                })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Posts;"],"mappings":";;;AAAA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA,SAASA,KAAT,EAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,YAAT,QAA6B,gBAA7B;;;;AAEA,MAAMC,KAAK,GAAIC,KAAD,IAAW;EAAA;;EACrB,MAAM;IACFC,KADE;IACKC,QADL;IAEFC,MAFE;IAEMC,SAFN;IAEiBC,KAFjB;IAGFC,YAHE;IAGYC,eAHZ;IAG6BC,MAH7B;IAGqCC;EAHrC,IAGmDT,KAHzD;EAKA,MAAMU,OAAO,GAAGb,UAAU,EAA1B;;EAEA,MAAMc,IAAI,GAAG,YAAY;IACrBT,QAAQ,CAAC,MAAMJ,YAAY,CAACO,KAAD,CAAnB,CAAR;EACH,CAFD;;EAIAX,SAAS,CAAC,MAAM;IACZiB,IAAI;EACP,CAFQ,EAEN,EAFM,CAAT;;EAKA,MAAMC,YAAY,GAAIC,KAAD,IAAW;IAC5BJ,SAAS,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAT;EACH,CAFD;;EAIA,MAAMC,YAAY,GAAIH,KAAD,IAAW;IAC5BA,KAAK,CAACI,cAAN;EACH,CAFD;;EAIA,MAAMC,WAAW,GAAG,MAAM;IACtBb,KAAK,GAAGK,OAAO,CAACS,IAAR,CAAa,aAAb,CAAH,GACDC,KAAK,CAAC,cAAD,CADT;EAEH,CAHD;;EAKA,MAAMC,kBAAkB,GAAG,CAACR,KAAD,EAAQF,IAAR,KAAiB;IACxC;IACA,IAAIN,KAAJ,EAAW;MACPE,eAAe,CAACI,IAAD,CAAf;MACAP,SAAS,CAACO,IAAI,CAACW,GAAN,CAAT;MACAZ,OAAO,CAACS,IAAR,CAAc,UAASR,IAAI,CAACW,GAAI,EAAhC;IACH,CAJD,MAIO;MACHF,KAAK,CAAC,cAAD,CAAL;IACH,CARuC,CAUxC;;EACH,CAXD;;EAaA,oBACI;IAAA,wBACI;MAAM,EAAE,EAAC,SAAT;MAAmB,QAAQ,EAAEJ,YAA7B;MAAA,wBACI;QAAO,IAAI,EAAC,MAAZ;QAAmB,IAAI,EAAC,QAAxB;QAAiC,WAAW,EAAC,aAA7C;QAA2D,KAAK,EAAER,MAAlE;QAA0E,QAAQ,EAAEI;MAApF;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QAAQ,KAAK,EAAE;UAAEW,QAAQ,EAAE;QAAZ,CAAf;QAAqC,OAAO,EAAEL,WAA9C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,EAOQjB,KAAK,CAACuB,MAAN,CAAab,IAAI,IAAI;MAEjB,OAAQ,GAAEA,IAAI,CAACc,KAAM,IAAGd,IAAI,CAACe,WAAY,EAAlC,CACH;MADG,CAEFC,WAFE,GAGFC,QAHE,CAGOpB,MAAM,CAACmB,WAAP,EAHP,CAAP;IAIH,CAND,EAMGE,GANH,CAMQlB,IAAD,IAAU;MACb,oBACI;QAAA,uBACI;UAAK,EAAE,EAAC,WAAR;UAAoB,OAAO,EAAGE,KAAD,IAAW;YACpC;cAAEQ,kBAAkB,CAACR,KAAD,EAAQF,IAAR,CAAlB;YAAiC;UACtC,CAFD;UAAA,wBAGI;YAAI,SAAS,EAAC,YAAd;YAAA,UAA4BA,IAAI,CAACc;UAAjC;YAAA;YAAA;YAAA;UAAA,QAHJ,eAII;YAAA,UAAId,IAAI,CAACe;UAAT;YAAA;YAAA;YAAA;UAAA,QAJJ,eAKI;YAAA,wBACI;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,OACmBf,IAAI,CAACmB,KADxB;UAAA;YAAA;YAAA;YAAA;UAAA,QALJ,eAQI;YAAA,wBACI;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,OACoBnB,IAAI,CAACoB,MAAL,CAAYC,QADhC;UAAA;YAAA;YAAA;YAAA;UAAA,QARJ,eAWI;YAAA,wBACI;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,OACsBrB,IAAI,CAACsB,QAD3B;UAAA;YAAA;YAAA;YAAA;UAAA,QAXJ;QAAA;UAAA;UAAA;UAAA;QAAA;MADJ,iBADJ;IAmBH,CA1BD,CAPR;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAqCH,CAhFD;;GAAMlC,K;UAMcF,U;;;KANdE,K;AAkFN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}
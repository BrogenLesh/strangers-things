{"version":3,"sources":["components/utility.js","components/FeaturedPost.js","components/profile.js","components/home.js","components/posts.js","components/App.js","index.js"],"names":["STRANGER_THINGS_API_URL","apiCall","url","method","token","body","data","fetch","setToken","getFetchOptions","response","json","error","console","toUpperCase","JSON","stringify","Object","assign","headers","Authorization","fetchPosts","posts","loginUser","username","password","guest","login","user","registerUser","registration","submitComment","content","postId","comment","log","submitPost","location","description","price","title","post","newPosts","deletePost","success","featuredPosts","setPosts","featuredPost","setFeaturedPost","useState","newComment","setNewComment","history","useHistory","handleClose","useParams","push","handleSubmitComment","e","preventDefault","id","find","pt","handleDeletePost","stopPropagation","window","confirm","remainingPosts","filter","className","comments","map","onSubmit","onChange","target","value","type","name","placeholder","onClick","guestId","profile","setUser","setUsername","setPassword","isRegistering","setIsRegistering","handleSubmit","event","required","Home","Posts","search","setSearch","setDescription","setLocation","setPrice","setTitle","useEffect","handleSubmitPost","vc","toLowerCase","includes","searchMatches","alert","handlePostClick","App","exact","to","path","FeaturedPost","ReactDOM","render","document","getElementById"],"mappings":"kMAAMA,EACF,iEAESC,EAAO,iDAAG,WAAOC,GAAP,4GAAYC,EAAZ,+BAAqB,MAAOC,EAA5B,uBAAmCC,EAAnC,uBACfC,GAAO,EADQ,kBAGQC,MACnBP,EAA0BE,EAC1BM,EAASC,EAAgBN,EAAQE,GAAOD,IAL7B,cAGTM,EAHS,iBAOFA,EAASC,OAPP,aAOfL,EAPe,QASNM,MATM,uBAULN,EAAKM,MAVA,0DAafC,QAAQD,MAAR,MAbe,iCAgBZN,GAhBY,0DAAH,sDAmBdG,EAAkB,SAACN,EAAQE,GAC7B,MAAO,CACHF,OAAQA,EAAOW,cACfT,KAAMU,KAAKC,UAAUX,KAIvBG,EAAW,SAACH,EAAMD,GACpB,OAAOA,EACDa,OAAOC,OAAOb,EAAM,CAClBc,QAASF,OAAOC,OAAOb,EAAKc,QAAS,CACjCC,cAAc,UAAD,OAAYhB,OAG/BC,GAMGgB,EAAU,iDAAG,WAAOjB,GAAP,iGACHH,EAAQ,SAAU,MAAOG,GADtB,WAChBE,EADgB,SAERA,EAAKA,KAFG,yCAGb,IAHa,gCAMfA,EAAKA,KAAKgB,OAAS,IANJ,2CAAH,sDAaRC,EAAS,iDAAG,WAAMC,EAAUC,GAAhB,iGACHxB,EAAQ,eAAgB,OAAQ,KAAM,CACxDyB,MAAO,CAACF,WAAUC,cAFG,cACjBE,EADiB,yBAKhB,CACLC,KAAMD,EAAMrB,KAAKoB,MACjBtB,MAAOuB,EAAMrB,KAAKF,QAPG,2CAAH,wDAWTyB,EAAY,iDAAG,WAAML,EAAUC,GAAhB,iGACCxB,EAAQ,kBAAmB,OAAQ,KAAM,CAClEyB,MAAO,CAACF,WAAUC,cAFM,cACpBK,EADoB,yBAKnB,CACLF,KAAME,EAAaxB,KAAKoB,MACxBtB,MAAO0B,EAAaxB,KAAKF,QAPD,2CAAH,wDAWZ2B,EAAa,iDAAG,WAAM3B,EAAO4B,EAASC,GAAtB,iGACRhC,EAAQ,UAAD,OACdgC,EADc,aAExB,OACA7B,EACA,CAAC8B,QAAS,CAACF,WAAUN,MAAO,CAACtB,WALJ,cACrBE,EADqB,OAQ3BO,QAAQsB,IAAI,WAAY7B,GARG,kBAUpBA,GAVoB,2CAAH,0DAab8B,EAAU,iDAAG,WAAMhC,EAAOiC,EAAUC,EAAaC,EAAOC,GAA3C,iGACLvC,EAAQ,SAEzB,OACAG,EACA,CAAEqC,KAAM,CAACH,cAAaD,WAAUE,QAAOC,WALjB,8BASDnB,EAAWjB,GATV,cASlBsC,EATkB,yBAUjBA,GAViB,2CAAH,8DAeVC,EAAU,iDAAG,WAAMvC,EAAO6B,GAAb,iGACLhC,EAAQ,UAAD,OACdgC,GACV,SACA7B,GAJsB,cAClBE,EADkB,yBAOjBA,EAAKsC,SAPY,2CAAH,wD,OC1BVC,EA3EO,SAAC,GAKhB,IAAD,EAJJjB,EAII,EAJJA,KACAxB,EAGI,EAHJA,MACAkB,EAEI,EAFJA,MAAOwB,EAEH,EAFGA,SACPC,EACI,EADJA,aAAcC,EACV,EADUA,gBAGd,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAUC,cAGVC,GAFWC,cAAVtB,OAEa,WAClBe,GAAgB,GAEhBI,EAAQI,KAAK,YAGTC,EAAmB,iDAAG,WAAOC,GAAP,wFAC1BA,EAAEC,iBADwB,SAEH5B,EAAc3B,EAAO8C,EAAYH,EAAaa,IAF3C,8BAIJvC,EAAWjB,GAJP,OAIpBsC,EAJoB,OAK1BI,EAASJ,GACTM,EAAgBN,EAASmB,MAAK,SAAAC,GAAE,OAAIA,EAAGF,IAAMb,EAAaa,OANhC,2CAAH,sDASnBG,EAAgB,iDAAG,WAAOL,EAAGzB,GAAV,oFACvByB,EAAEM,mBACEC,OAAOC,QAAQ,iBAFI,gCAGGvB,EAAWvC,EAAO6B,GAHrB,gBAKnBqB,IACMa,EAAiB7C,EAAM8C,QAAO,SAAAN,GAAE,OAAIA,EAAGF,IAAM3B,KACnDa,EAASqB,IAPU,2CAAH,wDAYtB,OAAO,0BAASE,UAAU,gBAAnB,UACL,6BAAKtB,EAAaP,QAClB,4BAAIO,EAAaV,WACjB,4BAAIU,EAAaT,cACjB,4BAAIS,EAAaR,QACjB,mDAAeQ,QAAf,IAAeA,GAAf,UAAeA,EAAcrB,aAA7B,aAAe,EAAqBF,YAEpC,oCACE,0CACA,6BACGuB,EAAauB,SAASC,KAAI,SAAArC,GACzB,OAAO,6BACL,iCAAOA,EAAQF,QAAf,eAAoCE,EAAQR,MAAMF,aADpCU,EAAQ0B,YAO9B,uBAAMY,SAAUf,EAAhB,UACI,uBACEgB,SAAU,SAACf,GAAD,OAAOP,EAAcO,EAAEgB,OAAOC,QACxCC,KAAK,OAAOC,KAAK,UACjBC,YAAY,UAAUH,MAAOzB,IAC7B,wBAAQ0B,KAAK,SAAb,+BAGN,4BAGA,wBAAQG,QAASzB,EAAjB,mBACC1B,GAAQxB,GAAU2C,EAAaiC,SAAWpD,EAAKgC,IAC5C,wBAAQmB,QAAS,SAACrB,GAAOK,EAAiBL,EAAGX,EAAaa,KAA1D,yBCCOqB,EAvEC,SAAC,GAAwC,IAAtCrD,EAAqC,EAArCA,KAAMsD,EAA+B,EAA/BA,QAAS9E,EAAsB,EAAtBA,MAAOI,EAAe,EAAfA,SACrC,EAAgCyC,mBAAS,IAAzC,mBAAOzB,EAAP,KAAiB2D,EAAjB,KACA,EAAgClC,mBAAS,IAAzC,mBAAOxB,EAAP,KAAiB2D,EAAjB,KACA,EAA0CnC,oBAAS,GAAnD,mBAAOoC,EAAP,KAAsBC,EAAtB,KAEMC,EAAY,iDAAG,WAAO7B,GAAP,8FACjBA,EAAEC,kBAEE0B,EAHa,iCAIiBxD,EAAaL,EAAUC,GAJxC,gBAILG,EAJK,EAILA,KAAMxB,EAJD,EAICA,MACd8E,EAAQtD,GACRpB,EAASJ,GANI,yCAQiBmB,EAAUC,EAAUC,GARrC,iBAQLG,EARK,EAQLA,KAAMxB,EARD,EAQCA,MACd8E,EAAQtD,GACRpB,EAASJ,GAVI,4CAAH,sDAuBlB,OACI,mCACKwB,GAAQxB,EACL,qCACI,yCACA,8BAAIwB,EAAKJ,SAAT,mBACA,wBAAQuD,QAfH,WACjBG,GAAQ,GACR1E,EAAS,KAaG,uBAGJ,qCACI,6BAAK6E,EAAgB,eAAiB,UACtC,uBAAMb,SAAUe,EAAhB,UACI,uBACId,SAAU,SAACe,GAAD,OACNL,EAAYK,EAAMd,OAAOC,QAE7Bc,UAAQ,EACRZ,KAAK,WACLD,KAAK,OACLE,YAAY,WACZH,MAAOnD,IAEX,uBACIiD,SAAU,SAACe,GAAD,OACNJ,EAAYI,EAAMd,OAAOC,QAE7Bc,UAAQ,EACRZ,KAAK,WACLD,KAAK,WACLE,YAAY,WACZH,MAAOlD,IAEX,wBAAQmD,KAAK,SAAb,uBAEJ,wBAAQG,QAtCG,WACvBO,GAAkBD,IAqCN,kCCzDLK,EANF,WACT,OAAO,4CACP,2DCiIWC,EAjID,SAAC,GAMR,IALH/D,EAKE,EALFA,KACAxB,EAIE,EAJFA,MACAkB,EAGE,EAHFA,MACAwB,EAEE,EAFFA,SACAE,EACE,EADFA,gBAEA,EAA4BC,mBAAS,IAArC,mBAAO2C,EAAP,KAAeC,EAAf,KACA,EAAsC5C,mBAAS,IAA/C,mBAAOX,EAAP,KAAoBwD,EAApB,KACA,EAAgC7C,mBAAS,IAAzC,mBAAOZ,EAAP,KAAiB0D,EAAjB,KACA,EAA0B9C,mBAAS,IAAnC,mBAAOV,EAAP,KAAcyD,EAAd,KACA,EAA0B/C,mBAAS,IAAnC,mBAAOT,EAAP,KAAcyD,EAAd,KAEM7C,EAAUC,cAEhB6C,qBAAU,kBAAM,gCAAC,oGAAYpD,EAAZ,SAA2BzB,EAAWjB,GAAtC,sGAAD,KAAmD,IAEnE,IAeM+F,EAAgB,iDAAG,WAAOX,GAAP,wFACrBA,EAAM7B,iBADe,SAEEvB,EAAWhC,EAAOiC,EAAUC,EAAaE,EAAOD,GAFlD,OAEfG,EAFe,OAGrBI,EAASJ,GAHY,2CAAH,sDAMhBqB,EAAgB,iDAAG,WAAOL,EAAGzB,GAAV,oFACrByB,EAAEM,mBACEC,OAAOC,QAAQ,iBAFE,gCAGOvB,EAAWvC,EAAO6B,GAHzB,gBAKPkC,EAAiB7C,EAAM8C,QAAO,SAACgC,GAAD,OAAQA,EAAGxC,IAAM3B,KACrDa,EAASqB,IANI,2CAAH,wDAWtB,OACI,qCACI,uCAEA,uBACIM,SAAU,SAACf,GAAD,OAAOmC,EAAUnC,EAAEgB,OAAOC,QACpCC,KAAK,OACLC,KAAK,SACLC,YAAY,WAGflD,GAAQxB,GACL,uBAAMoE,SAAU2B,EAAhB,UACI,uBACI1B,SAAU,SAACf,GAAD,OAAOuC,EAASvC,EAAEgB,OAAOC,QACnCC,KAAK,OACLC,KAAK,QACLC,YAAY,QACZH,MAAOnC,IAEX,uBACIiC,SAAU,SAACf,GAAD,OAAOsC,EAAStC,EAAEgB,OAAOC,QACnCC,KAAK,OACLC,KAAK,QACLC,YAAY,QACZH,MAAOpC,IAEX,uBACIkC,SAAU,SAACf,GAAD,OAAOqC,EAAYrC,EAAEgB,OAAOC,QACtCC,KAAK,OACLC,KAAK,WACLC,YAAY,WACZH,MAAOtC,IAEX,uBACIoC,SAAU,SAACf,GAAD,OAAOoC,EAAepC,EAAEgB,OAAOC,QACzCC,KAAK,OACLC,KAAK,cACLC,YAAY,cACZH,MAAOrC,IAEX,wBAAQsC,KAAK,SAAb,6BAIR,kCACKtD,EACI8C,QAAO,SAAC3B,GACL,OAhFE,SAACA,GACnB,MAAO,UAAGA,EAAKJ,SAAR,YAAoBI,EAAKH,YAAzB,YAAwCG,EAAKD,MAA7C,YAAsDC,EAAKF,OAC7D8D,cACAC,SAASV,EAAOS,eA6EEE,CAAc9D,MAExB8B,KAAI,SAAC9B,GACF,OACI,sBAEIsC,QAAS,SAACrB,IAhFd,SAACA,EAAGjB,GACpBb,GAAQxB,GACR4C,EAAgBP,GAChBW,EAAQI,KAAR,iBAAuBf,EAAKmB,MAE5B4C,MAAM,iBA4EkBC,CAAgB/C,EAAGjB,IAH3B,UAMI,6BAAKA,EAAKD,QACV,4BAAIC,EAAKJ,WACT,4BAAII,EAAKH,cACT,4BAAIG,EAAKF,QAERX,GAAQxB,GAASqC,EAAKuC,SAAWpD,EAAKgC,IACnC,wBACImB,QAAS,SAACrB,GAAD,OACLK,EAAiBL,EAAGjB,EAAKmB,KAFjC,sBAXCnB,EAAKmB,aC5B3B8C,EArEH,WACR,MAA0BzD,mBAAS,IAAnC,mBAAO3B,EAAP,KAAcwB,EAAd,KACA,EAAwCG,oBAAS,GAAjD,mBAAOF,EAAP,KAAqBC,EAArB,KACA,EAA8BC,oBAAS,GAAvC,mBACA,GADA,UACwBA,oBAAS,IAAjC,mBAAOrB,EAAP,KAAasD,EAAb,KACA,EAA0BjC,mBAAS,IAAnC,mBAAO7C,EAAP,KAAcI,EAAd,KAEA,OACI,iCACI,gCACI,cAAC,IAAD,CACImG,OAAK,EACLC,GAAG,IAFP,kBAOA,cAAC,IAAD,CACIA,GAAG,SADP,mBAMA,cAAC,IAAD,CACIA,GAAG,WADP,wBAOJ,cAAC,IAAD,CAAOD,OAAK,EAACE,KAAK,IAAlB,SACI,cAAC,EAAD,CAAMjF,KAAMA,MAGhB,eAAC,IAAD,CAAOiF,KAAK,SAAZ,UACI,cAAC,IAAD,CAAOA,KAAK,iBAAZ,SACKjF,GAAQxB,GAAS2C,GACd,cAAC+D,EAAD,CACIlF,KAAMA,EACNxB,MAAOA,EACPkB,MAAOA,EACPwB,SAAUA,EACVC,aAAcA,EACdC,gBAAiBA,MAI7B,cAAC,EAAD,CACIpB,KAAMA,EACNxB,MAAOA,EACP2C,aAAcA,EACdC,gBAAiBA,EACjB1B,MAAOA,EACPwB,SAAUA,OAIlB,cAAC,IAAD,CAAO+D,KAAK,WAAZ,SACI,cAAC,EAAD,CACIjF,KAAMA,EACNsD,QAASA,EACT9E,MAAOA,EACPI,SAAUA,UCjE9BuG,IAASC,OACL,cAAC,IAAD,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,U","file":"static/js/main.3eaff73a.chunk.js","sourcesContent":["const STRANGER_THINGS_API_URL =\r\n    \"https://strangers-things.herokuapp.com/api/2204-FTB-MT-WEB-PT/\";\r\n\r\nexport const apiCall = async (url, method = \"GET\", token, body) => {\r\n    let data = false;\r\n    try {\r\n        const response = await fetch(\r\n            STRANGER_THINGS_API_URL + url,\r\n            setToken(getFetchOptions(method, body), token)\r\n        );\r\n        data = await response.json();\r\n\r\n        if (data.error) {\r\n            throw data.error;\r\n        }\r\n    } catch (e) {\r\n        console.error(e);\r\n    }\r\n\r\n    return data;\r\n};\r\n\r\nconst getFetchOptions = (method, body) => {\r\n    return {\r\n        method: method.toUpperCase(),\r\n        body: JSON.stringify(body),\r\n    };\r\n};\r\n\r\nconst setToken = (body, token) => {\r\n    return token\r\n        ? Object.assign(body, {\r\n            headers: Object.assign(body.headers, {\r\n                Authorization: `Bearer ${token}`,\r\n            }),\r\n        })\r\n        : body;\r\n};\r\n\r\n\r\n//helper functions for api use\r\n\r\nexport const fetchPosts = async (token) => {\r\n    const data = await apiCall('/posts', 'GET', token)\r\n    if (!data || !data.data) {\r\n      return []\r\n    }\r\n  \r\n    return data.data.posts || [];\r\n  }\r\n  \r\n  export const fetchPost = async(token, postId) => {\r\n  \r\n  }\r\n  \r\n  export const loginUser = async(username, password) => {\r\n    const login = await apiCall(\"/users/login\", \"POST\", null, {\r\n      guest: {username, password}\r\n    })\r\n  \r\n    return {\r\n      user: login.data.guest, \r\n      token: login.data.token\r\n    };\r\n  }\r\n  \r\n  export const registerUser = async(username, password) => {\r\n    const registration = await apiCall(\"/users/register\", \"POST\", null, {\r\n      guest: {username, password}\r\n    })\r\n  \r\n    return {\r\n      user: registration.data.guest, \r\n      token: registration.data.token\r\n    };\r\n  }\r\n  \r\n  export const submitComment = async(token, content, postId) => {\r\n    const data = await apiCall(\r\n      `/posts/${postId}/comments`, \r\n      'POST', \r\n      token, \r\n      {comment: {content}, guest: {token}}\r\n    )\r\n  \r\n    console.log('comment?', data);\r\n  \r\n    return data;\r\n  }\r\n  \r\n  export const submitPost = async(token, location, description, price, title) => {\r\n    const data = await apiCall(\r\n      `/posts`, \r\n      'POST', \r\n      token, \r\n      { post: {description, location, price, title} }\r\n    )\r\n  \r\n    // Response from the API is incomplete, so let's grab the full vacation object\r\n    const newPosts = await fetchPosts(token)\r\n    return newPosts;\r\n  }\r\n  \r\n  \r\n  \r\n  export const deletePost = async(token, postId) => {\r\n    const data = await apiCall(\r\n      `/posts/${postId}`,\r\n      'DELETE',\r\n      token\r\n    );\r\n  \r\n    return data.success;\r\n  }","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { fetchPosts, deletePost, submitComment } from \"./utility\";\r\n\r\nconst featuredPosts = ({\r\n  user,\r\n  token,\r\n  posts, setPosts,\r\n  featuredPost, setFeaturedPost\r\n}) => {\r\n\r\n  const [newComment, setNewComment] = useState('')\r\n  const history = useHistory();\r\n  const {postId} = useParams();\r\n\r\n  const handleClose = () => {\r\n    setFeaturedPost(false)\r\n\r\n    history.push('/posts');\r\n  }\r\n\r\n  const handleSubmitComment = async (e) => {\r\n    e.preventDefault();\r\n    const _comment = await submitComment(token, newComment, featuredPost.id)\r\n\r\n    const newPosts= await fetchPosts(token)\r\n    setPosts(newPosts);\r\n    setFeaturedPost(newPosts.find(pt => pt.id == featuredPost.id))\r\n  }\r\n\r\n  const handleDeletePost = async (e, postId) => {\r\n    e.stopPropagation();\r\n    if (window.confirm('Are you sure?')) {\r\n      const isDeleted = await deletePost(token, postId)\r\n      if (isDeleted) {\r\n        handleClose()\r\n        const remainingPosts = posts.filter(pt => pt.id != postId)\r\n        setPosts(remainingPosts)\r\n      }\r\n    }\r\n  }\r\n\r\n  return <article className=\"featured-post\">\r\n    <h1>{featuredPost.title}</h1>\r\n    <p>{featuredPost.location}</p>\r\n    <p>{featuredPost.description}</p>\r\n    <p>{featuredPost.price}</p>\r\n    <p>Posted by: {featuredPost?.guest?.username}</p>\r\n\r\n    <section>\r\n      <h2>Comments</h2>\r\n      <ul>\r\n        {featuredPost.comments.map(comment => {\r\n          return <li key={comment.id}>\r\n            <span>{comment.content} posted by: {comment.guest.username}</span>\r\n          </li>\r\n        })}\r\n      </ul>\r\n    </section>\r\n\r\n    <form onSubmit={handleSubmitComment}>\r\n        <input \r\n          onChange={(e) => setNewComment(e.target.value)}\r\n          type=\"text\" name=\"comment\" \r\n          placeholder=\"comment\" value={newComment} />\r\n          <button type=\"submit\">Submit Comment</button>\r\n    </form>\r\n\r\n    <section>\r\n      {/* Submit comment component */}\r\n    </section>\r\n    <button onClick={handleClose}>Close</button>\r\n    {user && token && (featuredPost.guestId == user.id) &&\r\n        <button onClick={(e) => {handleDeletePost(e, featuredPost.id)}}>Delete </button>\r\n      }\r\n  </article>\r\n}\r\n\r\n\r\nexport default featuredPosts;\r\n","import React, { useState } from \"react\";\r\nimport { loginUser, registerUser } from \"./utility\";\r\n\r\nconst profile = ({ user, setUser, token, setToken }) => {\r\n    const [username, setUsername] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [isRegistering, setIsRegistering] = useState(false);\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        if (isRegistering) {\r\n            const { user, token } = await registerUser(username, password);\r\n            setUser(user);\r\n            setToken(token);\r\n        } else {\r\n            const { user, token } = await loginUser(username, password);\r\n            setUser(user);\r\n            setToken(token);\r\n        }\r\n    };\r\n\r\n    const handleLogout = () => {\r\n        setUser(false);\r\n        setToken(\"\");\r\n    };\r\n\r\n    const toggleRegistration = () => {\r\n        setIsRegistering(!isRegistering);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {user && token ? (\r\n                <>\r\n                    <h1>Profile</h1>\r\n                    <p>{user.username} is logged in</p>\r\n                    <button onClick={handleLogout}>Logout</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                    <h1>{isRegistering ? \"Registration\" : \"Login\"}</h1>\r\n                    <form onSubmit={handleSubmit}>\r\n                        <input\r\n                            onChange={(event) =>\r\n                                setUsername(event.target.value)\r\n                            }\r\n                            required\r\n                            name=\"username\"\r\n                            type=\"text\"\r\n                            placeholder=\"username\"\r\n                            value={username}\r\n                        ></input>\r\n                        <input\r\n                            onChange={(event) =>\r\n                                setPassword(event.target.value)\r\n                            }\r\n                            required\r\n                            name=\"password\"\r\n                            type=\"password\"\r\n                            placeholder=\"password\"\r\n                            value={password}\r\n                        ></input>\r\n                        <button type=\"submit\">Submit</button>\r\n                    </form>\r\n                    <button onClick={toggleRegistration}>\r\n                        Register/Login \r\n                    </button>\r\n                </>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default profile;\r\n","import React from \"react\";\r\n\r\nconst Home = () => {\r\n    return <div>Home Page\r\n    <p>Log in tho get started</p>\r\n    </div>\r\n}\r\n\r\nexport default Home;","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { fetchPosts, submitPost, deletePost } from \"./utility\";\r\n\r\nconst Posts = ({\r\n    user,\r\n    token,\r\n    posts,\r\n    setPosts,\r\n    setFeaturedPost,\r\n}) => {\r\n    const [search, setSearch] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [location, setLocation] = useState(\"\");\r\n    const [price, setPrice] = useState(\"\");\r\n    const [title, setTitle] = useState(\"\");\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect(() => (async () => setPosts(await fetchPosts(token)))(), []);\r\n\r\n    const searchMatches = (post) => {\r\n        return `${post.location} ${post.description} ${post.title} ${post.price}`\r\n            .toLowerCase()\r\n            .includes(search.toLowerCase());\r\n    };\r\n\r\n    const handlePostClick = (e, post) => {\r\n        if (user && token) {\r\n            setFeaturedPost(post);\r\n            history.push(`/posts/${post.id}`);\r\n        } else {\r\n            alert(\"not logged in\");\r\n        }\r\n    };\r\n\r\n    const handleSubmitPost = async (event) => {\r\n        event.preventDefault();\r\n        const newPosts = await submitPost(token, location, description, title, price);\r\n        setPosts(newPosts);\r\n    };\r\n\r\n    const handleDeletePost = async (e, postId) => {\r\n        e.stopPropagation();\r\n        if (window.confirm(\"Are you sure?\")) {\r\n            const isDeleted = await deletePost(token, postId);\r\n            if (isDeleted) {\r\n                const remainingPosts = posts.filter((vc) => vc.id != postId);\r\n                setPosts(remainingPosts);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>Posts</h1>\r\n\r\n            <input\r\n                onChange={(e) => setSearch(e.target.value)}\r\n                type=\"text\"\r\n                name=\"search\"\r\n                placeholder=\"search\"\r\n            />\r\n\r\n            {user && token && (\r\n                <form onSubmit={handleSubmitPost}>\r\n                    <input\r\n                        onChange={(e) => setTitle(e.target.value)}\r\n                        type=\"text\"\r\n                        name=\"title\"\r\n                        placeholder=\"title\"\r\n                        value={title}\r\n                    />\r\n                    <input\r\n                        onChange={(e) => setPrice(e.target.value)}\r\n                        type=\"text\"\r\n                        name=\"price\"\r\n                        placeholder=\"price\"\r\n                        value={price}\r\n                    />\r\n                    <input\r\n                        onChange={(e) => setLocation(e.target.value)}\r\n                        type=\"text\"\r\n                        name=\"location\"\r\n                        placeholder=\"location\"\r\n                        value={location}\r\n                    />\r\n                    <input\r\n                        onChange={(e) => setDescription(e.target.value)}\r\n                        type=\"text\"\r\n                        name=\"description\"\r\n                        placeholder=\"description\"\r\n                        value={description}\r\n                    />\r\n                    <button type=\"submit\">Submit Posts</button>\r\n                </form>\r\n            )}\r\n\r\n            <section>\r\n                {posts\r\n                    .filter((post) => {\r\n                        return searchMatches(post);\r\n                    })\r\n                    .map((post) => {\r\n                        return (\r\n                            <div\r\n                                key={post.id}\r\n                                onClick={(e) => {\r\n                                    handlePostClick(e, post);\r\n                                }}\r\n                            >\r\n                                <h3>{post.title}</h3>\r\n                                <p>{post.location}</p>\r\n                                <p>{post.description}</p>\r\n                                <p>{post.price}</p>\r\n\r\n                                {user && token && post.guestId == user.id && (\r\n                                    <button\r\n                                        onClick={(e) =>\r\n                                            handleDeletePost(e, post.id)\r\n                                        }\r\n                                    >\r\n                                        Delete\r\n                                    </button>\r\n                                )}\r\n                            </div>\r\n                        );\r\n                    })}\r\n            </section>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Posts;\r\n\r\n/// fix vactions body css in line 83\r\n","import React, { useState } from \"react\";\r\nimport { NavLink, Route } from \"react-router-dom\";\r\nimport FeaturedPost from \"./FeaturedPost\";\r\nimport Account from \"./profile\";\r\nimport Home from \"./home\";\r\nimport Posts from \"./posts\";\r\n\r\n\r\n\r\nconst App = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [featuredPost, setFeaturedPost] = useState(false);\r\n    const [newPost, setNewPost] = useState(false);\r\n    const [user, setUser] = useState(false);\r\n    const [token, setToken] = useState(\"\");\r\n\r\n    return (\r\n        <main>\r\n            <nav>\r\n                <NavLink\r\n                    exact\r\n                    to=\"/\"\r\n                >\r\n                    Home\r\n                </NavLink>\r\n\r\n                <NavLink\r\n                    to=\"/posts\"\r\n                >\r\n                    Posts\r\n                </NavLink>\r\n\r\n                <NavLink\r\n                    to=\"/profile\"\r\n                >\r\n                    Profile\r\n                </NavLink>\r\n            </nav>\r\n\r\n            <Route exact path=\"/\">\r\n                <Home user={user} />\r\n            </Route>\r\n\r\n            <Route path=\"/posts\">\r\n                <Route path=\"/posts/:postId\">\r\n                    {user && token && featuredPost && (\r\n                        <FeaturedPost\r\n                            user={user}\r\n                            token={token}\r\n                            posts={posts}\r\n                            setPosts={setPosts}\r\n                            featuredPost={featuredPost}\r\n                            setFeaturedPost={setFeaturedPost}\r\n                        />\r\n                    )}\r\n                </Route>\r\n                <Posts\r\n                    user={user}\r\n                    token={token}\r\n                    featuredPost={featuredPost}\r\n                    setFeaturedPost={setFeaturedPost}\r\n                    posts={posts}\r\n                    setPosts={setPosts}\r\n                />\r\n            </Route>\r\n\r\n            <Route path=\"/profile\">\r\n                <Account\r\n                    user={user}\r\n                    setUser={setUser}\r\n                    token={token}\r\n                    setToken={setToken}\r\n                />\r\n            </Route>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport { App } from \"./components\";\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById(\"app\")\r\n);\r\n"],"sourceRoot":""}